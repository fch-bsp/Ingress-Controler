# Trabalhando baseado em path
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: path-ingress # primerira mudança
  annotations:  # criação de regra de rota 
    nginx.ingress.kubernetes.io/rewrite-target: / # outra mudança
  # namespace: default
spec:
  ingressClassName: nginx
  rules:
  - http: 
      paths:
      - path: /blue # outra mudança
        pathType: Prefix
        backend:
          service:
            name: web-blue  # name do service da aplicação 
            port:
              number: 80                  
      - path: /green  # outra mudança
        pathType: Prefix
        backend:
          service:
            name: web-green
            port:
              number: 80                  
--- 


# Trabalhando baseado em dominio
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: dominio-ingress # primerira mudança
  annotations:  # combinar as duas formas http://127.0.0.1.nip.io/blue ou http://blue.127.0.0.1.nip.io
    nginx.ingress.kubernetes.io/rewrite-target: / # combinar as duas formas 
spec:
  ingressClassName: nginx
  rules:
  - host: blue.127.0.0.1.nip.io # outra mudança definindo host especifico
    http: 
      paths:
      - path: / # outra mudança 
        pathType: Prefix
        backend:
          service:
            name: web-blue
            port:
              number: 80                  
  - host: green.127.0.0.1.nip.io # outra mudança definindo host especifico
    http: 
      paths:
      - path: / # outra mudança 
        pathType: Prefix
        backend:
          service:
            name: web-green
            port:
              number: 80  
--- 


# Trabalhando com rota padrão

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: padrao-ingress # primerira mudança
  annotations:  # criação de regra de rota 
    nginx.ingress.kubernetes.io/rewrite-target: / # outra mudança
  # namespace: default
spec:
  ingressClassName: nginx
  defaultBackend:
    service: 
      name: nginx
      port:
        number: 80


# Acesso app com padrão: http://127.0.0.1.nip.io/       

# lista qual ingress class 
# kubectl get ingress
# kubectl get ingressclass